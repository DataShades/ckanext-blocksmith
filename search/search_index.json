{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Blocksmith is a CKAN extension that allows you to create and manage pages using a visual editor.</p> <p></p> <p></p>"},{"location":"#requirements","title":"Requirements","text":"<p>CKAN 2.10+ Python 3.10+</p>"},{"location":"#license","title":"License","text":"<p>AGPL</p>"},{"location":"installation/","title":"Installation","text":"<p>There are two ways to install <code>ckanext-blocksmith</code>:</p> <ol> <li> <p>From source (recommended for development): <pre><code>pip install -e .\n</code></pre></p> </li> <li> <p>From PyPI (recommended for production): <pre><code>pip install ckanext-blocksmith\n</code></pre></p> </li> </ol> <p>After installing the extension, initialize the database tables by running:</p> <pre><code>ckan -c PATH_TO_CONFIG db upgrade -p blocksmith\n</code></pre>"},{"location":"menus/overview/","title":"Overview","text":"<p>TBD</p>"},{"location":"pages/overview/","title":"Overview","text":"<p>TBD</p>"},{"location":"pages/plugins/","title":"Plugins","text":"<p>The <code>GrapeJS</code> has a plugin system, that allows you to extend the editor with new features.</p> <p>You can find more information about the plugins in the GrapeJS documentation.</p>"},{"location":"pages/plugins/#override-the-default-plugins-and-options","title":"Override the default plugins and options","text":"<p>You can change the list of plugins and options for the GrapesJS editor that we use in the extension. For this, you have to initialize a regular CKAN JS module first.</p> <p>You can learn more about this in the CKAN documentation.</p> Note <p>Your JS module, that overrides the default plugins and options, must be loaded after the <code>blocksmith-editor.js</code> file. It means, that your extension should be loaded after the <code>blocksmith</code> extension in the <code>ckan.plugins</code> in the config file.</p> <p>For example: <pre><code>ckan.plugins =\n        ...\n        blocksmith\n        your_extension\n        ...\n</code></pre></p> <p>Imagine you already have a basic JS module, that is already being initialized.</p> <pre><code>ckan.module('my-module', function (jQuery) {\n    return {\n        initialize: function () {\n            console.log('I am a module');\n        }\n    };\n});\n</code></pre> <p>Now you can extend update the GrapeJS initialization options by adding the following to the module.</p> <pre><code>ckan.module('my-module', function (jQuery) {\n    Object.assign(ckan.sandbox().blocksmith, {\n        plugins: [\"my-plugin\"],\n        pluginsOpts: {\n            \"my-plugin\": {\n                // ...\n            }\n        }\n    });\n\n    return {\n        initialize: function () {\n            console.log('I am a module');\n        }\n    };\n});\n</code></pre> <p>This will completely override the list of plugins and options for the GrapesJS editor.</p> <p>If you want to add a new plugin, you can do so by adding it to the list of plugins. For example, if you want to add the <code>grapesjs-my-plugin</code> plugin, you can do so by adding it to the list of plugins.</p> <pre><code>ckan.sandbox().blocksmith.plugins.push(\"grapesjs-my-plugin\");\n</code></pre>"}]}